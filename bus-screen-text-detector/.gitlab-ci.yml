stages:
  - check
  - build-model
  - build-microservice


sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: check
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'dev'


variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

build-model:
  stage: build-model
  tags:
    - cml-gpu
  cache:
    paths:
      - .cache/pip
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"
      changes:
        - data/**/*
        - scripts/**/*
        - dvc.lock
        - dvc.yaml
        - donut/config/train_bus.yaml
    - if: $CI_PIPELINE_SOURCE == "schedule"

  before_script:
    - git fetch
    - git checkout $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - git pull
  script:
    - nvidia-smi
    - pip install "dvc[s3]"
    - pip install -r requirements.txt
    - dvc pull
    - dvc repro
    - dvc push
    - dvc metrics show
    - git fetch origin dev:dev
    - dvc metrics diff --show-md dev >> report.md
    - cml pr create . --skip-ci --merge
    - cml comment update report.md
    - dvc plots diff --targets data/5_performance/tracing/exp1/metrics.csv --show-vega dev > vega.json
    - vl2png vega.json > plot.png
    - echo '![](./plot.png "Training Loss")' >> report.md
    - cml comment update report.md

build-bus-screen-text-detector:
  stage: build-microservice
  image: docker:23.0.1
  tags:
    - visionaid-k8s
  only:
    refs:
      - main
      - dev
    changes:
      - micro-service/**/*
      - Dockerfile
      - .gitlab-ci.yml
      - dvc.lock
  cache:
    paths:
      - .cache/pip
  services:
    - docker:23.0.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "/certs/client"
  script:
    - apk add --update build-base python3 python3-dev zlib-dev jpeg-dev linux-headers git bash py3-pip py3-pygit2
    - pip install --no-cache-dir --upgrade pip
    - pip install dvc[s3]
    - dvc pull data/4_models/train_bus/exp1
    - export IMAGE_TAG_LAST=$CI_REGISTRY_IMAGE/visionaid-bus-screen-text-detector:$CI_COMMIT_BRANCH-latest
    - export IMAGE_TAG_CURRENT=$CI_REGISTRY_IMAGE/visionaid-bus-screen-text-detector:$CI_COMMIT_BRANCH-$(date +'%s') 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG_LAST || true
    - docker build --network host --cache-from $IMAGE_TAG_LAST -t $IMAGE_TAG_CURRENT -t $IMAGE_TAG_LAST .
    - docker push $IMAGE_TAG_LAST
    - docker push $IMAGE_TAG_CURRENT
